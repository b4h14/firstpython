#Importando o pandas para o projeto
  import pandas as pd
  
#Importando base de dados
  csv = pd.read_csv('nomeArquivo.csv')
  json = pd.read_json('nomeArquivo.json')
  txt = pd.read_table('nomeArquivo.txt')
  xlsx = pd.read_excel('nomeArquivo.xlsx')
    
#exportando bases de dados
  #csv = nomedaDS.to_csv('nomedoarquivo.csv')

#criando series e dataframes no pandas
  #series - lista de registros unicos, com indice e registro
    pd.Series(lista)    
  #dataframes - listas com diversos valores para cada indice
    pd.DataFrame(dicionario)

#selecionando colunas
  pd.nomeDataframe['nomedaColuna']
  dataframe.coluna
  
#Funcoes basicas em pandas
  
  #Obter informações importantes no dataframe
    dataframe.info()
  #Saber a quantidade de colunas/linhas
    dataframe.shape()
  #Visualizar os datatypes
    dataframe.dtypes()
  #Trazer os 5 primeiros registros
    nomeDataframe.head()
  #Trazer alguns valores estatísticos importantes
    nomeOBjeto.describe()
  #Fazer uma busca de registros
    nomeDataframe.loc[nomeRegistro]
  #Fazer a mesma busca, com base no indice
    nomeDataframe.iloc[indiceRegistro]
  #Exportar um dataframe para um arquivo CSV
    dataset.to_csv('diretorio/nomeArquivo.csv')
    
#querys
  #estrutura básica - retorna uma consulta de coluna
    nomedaDS.colunaDesejada
  #Query que retorna lista booleana
    nomedaDS.querydesejada == ['parametro'] 
  #Query que retorna uma consulta de registro
    nomedaDS[parametro]
      #pode ser usada a estrutura [() & ()] ao usar and, ou usar o | ao usar o or
  #Outra sintaxe 
    nomedaDS.query('parametro1 == "registro1" and/or parametro2 == registro2')
  #nomedaDS.columns.name = '', '', '' = Alterar nome das colunas do DF

#tratamento de dados
  #inplace = confirma a substituição dos valores no DF
  
  #Consulta de uma coluna que retorna os valores vazios em formato booleano
    nomedaDS.colunaConsultada.isna()
  #Preencher os dados vazios
    nomedaDS.fillna(valorDesejado, inplace = True/False )
  #Remover dados vazios
    dataset.dropna()
  #Eliminar valores repetidos
    dataset.drop_duplicates()
  #Visualizar ou alterar o index de um df
    dataset.index = novoIndex
  #Retornar uma lista booleana informando se há um conjunto de itens pré-determinados
    dataset.isin(listaCriterios)
  
