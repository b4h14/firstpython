#comando básico para importacao
  import xxx as xxx
    import pandas as pd
    import random
    import matplotlib as plt
    import numpy as np
_____________________________________________________________________________________________________________________________________________________________
                                                                        NUMPY

#importando bases de dados
  #csv = np.loadcsv ('nomeDoArquivo')
  #txt = np.loadtxt('nomeDoArquivo')

#principais operadores aritméticas
  #potenciação = **
  #divisão sem o resto = //
  #resto da divisão = %
  # igual a ==
  # diferente de !=
  
#podemos usar em operacoes matematicas o operador " _ " para registrar o ultimo resultado impresso
  2 + 2
    //output = 4
  _ * 2
    //output = 8

_____________________________________________________________________________________________________________________________________________________________
                                                                        PANDAS

#importando bases de dados
  #csv = pd.read_csv ()
  #json = pd.read_json ()
  #txt = pd.read_table ()
  #xlsx = pd.read_excel ()
  #html = pd.read_html
  
#exportando bases de dados
  #csv = nomedaDS.to_csv('nomedoarquivo.csv')
  
#criar séries = pd.Series
#criar datasets = pd.DataFrame

#selecionar uma coluna no DF
  #nomedaDS ['nomedacoluna']
  
#localizar um registro no DF
  #nomedaDS.loc [['registro'], [colunasdesejadas]]
  #nomedaDS.iloc [numerodoindice]

#querys
  #estrutura básica = nomedaDS.querydesejada (pode ser uma coluna)
  #nomedaDS.querydesejada == ['parâmetro1'] / retorna lista booleana
  #nomedaDS[parâmetro1] / retorna uma consulta
    #pode ser usada a estrutura [() & ()] para mais de um parâmetro
  #nomedaDS.query('parametro1 == "registro1" (str) and parametro2 == registro2')
  #nomedaDS.columns.name = '', '', '' = Alterar nome das colunas do DF

#como iterar em pandas
  #iterrows()
  #itercolumns()
  #itens()

#tratamento de dados
  #nomedaDS.isna() = detecta valores vazios
  #nomedaDS.isnull() = detecta valores não-vazios
  #nomedaDS.isin() = detecta valores específicos em formato booleano
  #nomedaDS.fillna(valordesejado, inplace = True) = preenche valores vazios
    #inplace = confirma a substituição dos valores no DF
  #nomedaDS.dropna(subset = ['valordesejado'] = elimina valores vazios
  #nomedaDS.dropna(subset = ['valordesejado'] = elimina valores vazios
    #lemmbrar de usar sempre implace para confirmar as alterações
  #nomedaDS.drop_duplicates () = deletar registros duplicados
  #nomedaDS.drop () = deletar registros
  #nomedaDS.index = alterar e redefinir o index da tabela
  #nomedaDS.concat ([Lista1], [Lista2]...) = concatenar DFs
  #nomedaDS.apply() = aplicar uma função em cada registro do DF
  #del nomedaDS['Colunaparadeletar'] = deletar 1 coluna
  #nomedaDS.value_counts() = contar a frequência de registros

#lambda
  #é usado para una função anônima, ou seja, é a melhor função auxiliar em outra função
  #sintaxe básica: nomedafuncao = lambda var1, var2, var3 : formula

#análise descritiva
  #nomedaDS.describe() = obter informações estatísticas do DF
  #nomedaDS.groupby() = criar um DF específico com o agrupamento de uma variável
  #pdcut(nomedaDS.colunadoquery, criterios) = categorizar por um critério específico
    #ex de criterios = [2,5,9,13] = [2,5],]5,9],]9,13]
41
