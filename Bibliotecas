#comando básico para importacao
  import xxx as xxx
    import pandas as pd
    import random
    import matplotlib as plt
    import numpy as np
    
#é possivel importar só uma parte de uma biblioteca para usar
  from numpy import arange
  
  
_____________________________________________________________________________________________________________________________________________________________
                                                                        NUMPY

#importando bases de dados
  #csv = np.loadcsv ('nomeDoArquivo')
  #txt = np.loadtxt('nomeDoArquivo')
  
#principais operadores aritméticas
  #potenciação = **
  #divisão sem o resto = //
  #resto da divisão = %
  # igual a ==
  # diferente de !=
  
#podemos usar em operacoes matematicas o operador " _ " para registrar o ultimo resultado impresso
  2 + 2
    //output = 4
  _ * 2
    //output = 8

#range - Cria um array determinado anteriormente
  novoArray = np.arange(10)

#É possível criar operações entre int e arrays usando o numpy
  anos = np.array([2003,1995,1970,2014]
  idade = 2022 - anos
    #output = [(19, 27, 52, 8)]
    
#Como fazer seleções em arrays np
  array[elementoInicialFechado:elementoFinalAberto:QuantidadePassos]

#Metodos e atributos numpy
  #https://numpy.org/doc/stable/reference/arrays.ndarray.html#array-attributes
_____________________________________________________________________________________________________________________________________________________________
                                                                        PANDAS

#importando bases de dados
  #csv = pd.read_csv ('nomedoarquivo.csv', sep = ';')
  #json = pd.read_json ()
  #txt = pd.read_table ()
  #xlsx = pd.read_excel ()
  #html = pd.read_html
  
#exportando bases de dados
  #csv = nomedaDS.to_csv('nomedoarquivo.csv')
  
#criando series e dataframes no pandas
  #series - lista de registros unicos, com indice e registro
    pd.Series(lista)    
  #dataframes - listas com diversos valores para cada indice
    pd.DataFrame(dicionario)
  
#funcoes basicas para pandas
  #dtype - Traz todos os tipos de dados na coleção
    nomeObjeto.dtypes
  #head - Traz os 5 primeiros registros
    nomeDataframe.head()
  #describe - Traz alguns valores estatísticos importantes
    nomeOBjeto.describe()
  #loc - Faz uma busca de registros
    nomeDataframe.loc[nomeRegistro]
  #iloc - Faz a mesma busca, com base no indice
    nomeDataframe.iloc[indiceRegistro]
    
#selecionando colunas
  pd.nomeDataframe['nomedaColuna']

#querys
  #estrutura básica - retorna uma consulta de coluna
    nomedaDS.colunaDesejada
  #Query que retorna lista booleana
    nomedaDS.querydesejada == ['parametro'] 
  #Query que retorna uma consulta de registro
    nomedaDS[parametro]
      #pode ser usada a estrutura [() & ()] ao usar and, ou usar o | ao usar o or
  #Outra sintaxe 
    nomedaDS.query('parametro1 == "registro1" and/or parametro2 == registro2')
  #nomedaDS.columns.name = '', '', '' = Alterar nome das colunas do DF
  
#tratamento de dados
  #inplace = confirma a substituição dos valores no DF
  #Consulta de uma coluna que retorna os valores vazios em formato booleano
    nomedaDS.colunaConsultada.isna()
  #Preencher os dados vazios
    nomedaDS.fillna(valorDesejado, inplace = True/False )
  #Remover dados vazios
    dataset.dropna()
  
____________________________________________________________________________________________________________________________________________________________
                                                                SQLALCHEMY
                                                                
#Instalação da biblioteca
  !pip install sqlalchemy
  import sqlalchemy as sa
  
#Criar o motor básico para rodar o sqlalchemy
  create_engine('mysql:///CS@localhost:senha')
